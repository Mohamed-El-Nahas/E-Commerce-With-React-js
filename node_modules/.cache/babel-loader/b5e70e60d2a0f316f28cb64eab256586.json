{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  cartItems: [],\n  totalAmount: 0,\n  totalQuantity: 0\n};\nconst CartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.cartItems.push({\n          id: newItem.id,\n          productName: newItem.productName,\n          imgUrl: newItem.imgUrl,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity));\n      console.log(state.totalQuantity);\n      console.log(state.cartItems);\n      console.log(newItem);\n    },\n    deleteItems: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id === id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity));\n    }\n  }\n});\nexport const CartActions = CartSlice.actions;\nexport default CartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalAmount","totalQuantity","CartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","productName","imgUrl","price","quantity","totalPrice","Number","reduce","total","console","log","deleteItems","filter","CartActions","actions","reducer"],"sources":["C:/Users/ascom/Desktop/React-e-project/e-com-demo/src/redux/Slice/CartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    cartItems : [],\r\n    totalAmount : 0,\r\n    totalQuantity : 0,\r\n\r\n\r\n}\r\n\r\nconst CartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addItem : (state, action) => \r\n    {\r\n        const newItem = action.payload\r\n        const existingItem = state.cartItems.find(\r\n            (item) => item.id === newItem.id)\r\n\r\n        state.totalQuantity++\r\n        if(!existingItem)\r\n        {\r\n            state.cartItems.push({\r\n                id : newItem.id,\r\n                productName : newItem.productName,\r\n                imgUrl : newItem.imgUrl,\r\n                price : newItem.price,\r\n                quantity : 1,\r\n                totalPrice : newItem.price\r\n            })\r\n        }\r\n        else\r\n        {\r\n            existingItem.quantity++\r\n            existingItem.totalPrice = Number (existingItem.totalPrice) + \r\n            Number (newItem.price)\r\n        }\r\n\r\n        state.totalAmount = state.cartItems.reduce((total , item) =>\r\n        total + Number (item.price) * Number (item.quantity))\r\n\r\n        console.log(state.totalQuantity)\r\n        console.log(state.cartItems)\r\n        console.log(newItem)\r\n    },\r\n\r\n    deleteItems : (state, action) =>\r\n    {\r\n      const id = action.payload\r\n      const existingItem = state.cartItems.find(item => item.id === id)\r\n  \r\n      if(existingItem)\r\n      {\r\n          state.cartItems = state.cartItems.filter(item => item.id === id)\r\n          state.totalQuantity = state.totalQuantity - existingItem.quantity\r\n      }\r\n      state.totalAmount = state.cartItems.reduce((total , item) =>\r\n          total + Number (item.price) * Number (item.quantity))\r\n    }\r\n  },\r\n  \r\n\r\n \r\n});\r\n\r\nexport const CartActions = CartSlice.actions\r\n\r\nexport default CartSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAG,EADK;EAEjBC,WAAW,EAAG,CAFG;EAGjBC,aAAa,EAAG;AAHC,CAArB;AAQA,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MADsB;EAE5BL,YAF4B;EAG5BM,QAAQ,EAAE;IACRC,OAAO,EAAG,CAACC,KAAD,EAAQC,MAAR,KACV;MACI,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACP,SAAN,CAAgBY,IAAhB,CAChBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EADb,CAArB;MAGAP,KAAK,CAACL,aAAN;;MACA,IAAG,CAACS,YAAJ,EACA;QACIJ,KAAK,CAACP,SAAN,CAAgBe,IAAhB,CAAqB;UACjBD,EAAE,EAAGL,OAAO,CAACK,EADI;UAEjBE,WAAW,EAAGP,OAAO,CAACO,WAFL;UAGjBC,MAAM,EAAGR,OAAO,CAACQ,MAHA;UAIjBC,KAAK,EAAGT,OAAO,CAACS,KAJC;UAKjBC,QAAQ,EAAG,CALM;UAMjBC,UAAU,EAAGX,OAAO,CAACS;QANJ,CAArB;MAQH,CAVD,MAYA;QACIP,YAAY,CAACQ,QAAb;QACAR,YAAY,CAACS,UAAb,GAA0BC,MAAM,CAAEV,YAAY,CAACS,UAAf,CAAN,GAC1BC,MAAM,CAAEZ,OAAO,CAACS,KAAV,CADN;MAEH;;MAEDX,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACP,SAAN,CAAgBsB,MAAhB,CAAuB,CAACC,KAAD,EAASV,IAAT,KAC3CU,KAAK,GAAGF,MAAM,CAAER,IAAI,CAACK,KAAP,CAAN,GAAsBG,MAAM,CAAER,IAAI,CAACM,QAAP,CADhB,CAApB;MAGAK,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACL,aAAlB;MACAsB,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACP,SAAlB;MACAwB,OAAO,CAACC,GAAR,CAAYhB,OAAZ;IACH,CAhCO;IAkCRiB,WAAW,EAAG,CAACnB,KAAD,EAAQC,MAAR,KACd;MACE,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACP,SAAN,CAAgBY,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAArB;;MAEA,IAAGH,YAAH,EACA;QACIJ,KAAK,CAACP,SAAN,GAAkBO,KAAK,CAACP,SAAN,CAAgB2B,MAAhB,CAAuBd,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAA3C,CAAlB;QACAP,KAAK,CAACL,aAAN,GAAsBK,KAAK,CAACL,aAAN,GAAsBS,YAAY,CAACQ,QAAzD;MACH;;MACDZ,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACP,SAAN,CAAgBsB,MAAhB,CAAuB,CAACC,KAAD,EAASV,IAAT,KACvCU,KAAK,GAAGF,MAAM,CAAER,IAAI,CAACK,KAAP,CAAN,GAAsBG,MAAM,CAAER,IAAI,CAACM,QAAP,CADpB,CAApB;IAED;EA9CO;AAHkB,CAAD,CAA7B;AAwDA,OAAO,MAAMS,WAAW,GAAGzB,SAAS,CAAC0B,OAA9B;AAEP,eAAe1B,SAAS,CAAC2B,OAAzB"},"metadata":{},"sourceType":"module"}