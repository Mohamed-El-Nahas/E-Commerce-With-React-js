{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  cartItems: [],\n  totalAmount: 0,\n  totalQuantity: 0\n};\nconst CartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.cartItems.push({\n          id: newItem.id,\n          productName: newItem.productName,\n          imgUrl: newItem.imgUrl,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = Number(existingItem.totalPrice) + Number(newItem.price);\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n      console.log(state.totalQuantity);\n      console.log(state.cartItems);\n      console.log(newItem);\n    },\n    deleteItems: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.cartItems.find(item => item.id === id);\n\n      if (existingItem) {\n        state.cartItems = state.cartItems.filter(item => item.id === id);\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\n      }\n\n      state.totalAmount = state.cartItems.reduce((total, item) => total + Number(item.price) * Number(item.quantity), 0);\n    }\n  }\n});\nexport const CartActions = CartSlice.actions;\nexport default CartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","totalAmount","totalQuantity","CartSlice","name","reducers","addItem","state","action","newItem","payload","existingItem","find","item","id","push","productName","imgUrl","price","quantity","totalPrice","Number","reduce","total","console","log","deleteItems","filter","CartActions","actions","reducer"],"sources":["C:/Users/ascom/Desktop/React-e-project/e-com-demo/src/redux/Slice/CartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    cartItems : [],\r\n    totalAmount : 0,\r\n    totalQuantity : 0,\r\n\r\n\r\n}\r\n\r\nconst CartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addItem: (state, action) => {\r\n      const newItem = action.payload;\r\n      const existingItem = state.cartItems.find(\r\n        (item) => item.id === newItem.id\r\n      );\r\n\r\n      state.totalQuantity++;\r\n      if (!existingItem) {\r\n        state.cartItems.push({\r\n          id: newItem.id,\r\n          productName: newItem.productName,\r\n          imgUrl: newItem.imgUrl,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice =\r\n          Number(existingItem.totalPrice) + Number(newItem.price);\r\n      }\r\n\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),0\r\n      );\r\n\r\n      console.log(state.totalQuantity);\r\n      console.log(state.cartItems);\r\n      console.log(newItem);\r\n    },\r\n    deleteItems: (state, action) => {\r\n      const id = action.payload;\r\n      const existingItem = state.cartItems.find((item) => item.id === id);\r\n\r\n      if (existingItem) {\r\n        state.cartItems = state.cartItems.filter((item) => item.id === id);\r\n        state.totalQuantity = state.totalQuantity - existingItem.quantity;\r\n      }\r\n      state.totalAmount = state.cartItems.reduce(\r\n        (total, item) => total + Number(item.price) * Number(item.quantity),0\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const CartActions = CartSlice.actions\r\n\r\nexport default CartSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAG,EADK;EAEjBC,WAAW,EAAG,CAFG;EAGjBC,aAAa,EAAG;AAHC,CAArB;AAQA,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MADsB;EAE5BL,YAF4B;EAG5BM,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACP,SAAN,CAAgBY,IAAhB,CAClBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EADX,CAArB;MAIAP,KAAK,CAACL,aAAN;;MACA,IAAI,CAACS,YAAL,EAAmB;QACjBJ,KAAK,CAACP,SAAN,CAAgBe,IAAhB,CAAqB;UACnBD,EAAE,EAAEL,OAAO,CAACK,EADO;UAEnBE,WAAW,EAAEP,OAAO,CAACO,WAFF;UAGnBC,MAAM,EAAER,OAAO,CAACQ,MAHG;UAInBC,KAAK,EAAET,OAAO,CAACS,KAJI;UAKnBC,QAAQ,EAAE,CALS;UAMnBC,UAAU,EAAEX,OAAO,CAACS;QAND,CAArB;MAQD,CATD,MASO;QACLP,YAAY,CAACQ,QAAb;QACAR,YAAY,CAACS,UAAb,GACEC,MAAM,CAACV,YAAY,CAACS,UAAd,CAAN,GAAkCC,MAAM,CAACZ,OAAO,CAACS,KAAT,CAD1C;MAED;;MAEDX,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACP,SAAN,CAAgBsB,MAAhB,CAClB,CAACC,KAAD,EAAQV,IAAR,KAAiBU,KAAK,GAAGF,MAAM,CAACR,IAAI,CAACK,KAAN,CAAN,GAAqBG,MAAM,CAACR,IAAI,CAACM,QAAN,CADlC,EACkD,CADlD,CAApB;MAIAK,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACL,aAAlB;MACAsB,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACP,SAAlB;MACAwB,OAAO,CAACC,GAAR,CAAYhB,OAAZ;IACD,CA9BO;IA+BRiB,WAAW,EAAE,CAACnB,KAAD,EAAQC,MAAR,KAAmB;MAC9B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACP,SAAN,CAAgBY,IAAhB,CAAsBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAA3C,CAArB;;MAEA,IAAIH,YAAJ,EAAkB;QAChBJ,KAAK,CAACP,SAAN,GAAkBO,KAAK,CAACP,SAAN,CAAgB2B,MAAhB,CAAwBd,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAA7C,CAAlB;QACAP,KAAK,CAACL,aAAN,GAAsBK,KAAK,CAACL,aAAN,GAAsBS,YAAY,CAACQ,QAAzD;MACD;;MACDZ,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACP,SAAN,CAAgBsB,MAAhB,CAClB,CAACC,KAAD,EAAQV,IAAR,KAAiBU,KAAK,GAAGF,MAAM,CAACR,IAAI,CAACK,KAAN,CAAN,GAAqBG,MAAM,CAACR,IAAI,CAACM,QAAN,CADlC,EACkD,CADlD,CAApB;IAGD;EA1CO;AAHkB,CAAD,CAA7B;AAiDA,OAAO,MAAMS,WAAW,GAAGzB,SAAS,CAAC0B,OAA9B;AAEP,eAAe1B,SAAS,CAAC2B,OAAzB"},"metadata":{},"sourceType":"module"}